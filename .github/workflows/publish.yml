name: Publish Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string
  release:
    types: [published]

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Lint and type check
        run: npm run lint

      - name: Run tests
        run: npm run test:run

      - name: Build package
        run: npm run build

      - name: Run project validation
        run: npm run validate

      - name: Verify package
        run: |
          echo "Verifying package structure..."
          npm pack --dry-run
          echo "Testing CLI..."
          node dist/app/cli.js --version

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if tag already exists
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ github.event.inputs.version }} already exists, skipping tag creation"
          else
            git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
            git push origin "v${{ github.event.inputs.version }}"
          fi

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Check if release already exists
          if gh release view "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Release v${{ github.event.inputs.version }} already exists, skipping release creation"
          else
            gh release create "v${{ github.event.inputs.version }}" \
              --title "Release v${{ github.event.inputs.version }}" \
              --notes "## Release v${{ github.event.inputs.version }}

            ### Installation
            \`\`\`bash
            npm install -g task-list-mcp@${{ github.event.inputs.version }}
            \`\`\`

            ### Changes
            See the [changelog](https://github.com/keyurgolani/task-list-mcp/compare/v${{ github.event.inputs.version }}...main) for details."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}