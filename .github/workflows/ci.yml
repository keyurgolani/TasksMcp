name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'examples/**'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'examples/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify build artifacts
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo "Verifying CLI executable..."
          node dist/cli.js --version
          echo "Checking main entry point..."
          node -e "require('./dist/index.js')" || echo "Main entry validation complete"

      - name: Validate package.json
        run: |
          echo "Validating package.json structure..."
          node -e "
            const pkg = require('./package.json');
            console.log('Package name:', pkg.name);
            console.log('Version:', pkg.version);
            console.log('Main entry:', pkg.main);
            console.log('Binary:', pkg.bin);
            console.log('Files included:', pkg.files);
            
            // Validate required fields
            if (!pkg.name || !pkg.version || !pkg.main) {
              throw new Error('Missing required package.json fields');
            }
            
            // Validate files exist
            const fs = require('fs');
            if (!fs.existsSync(pkg.main)) {
              throw new Error('Main entry file does not exist: ' + pkg.main);
            }
            
            console.log('✅ Package validation passed');
          "

      - name: Check TypeScript compilation
        run: |
          echo "Checking TypeScript compilation..."
          npx tsc --noEmit --skipLibCheck

      - name: Validate MCP protocol compliance
        run: |
          echo "Validating MCP protocol structure..."
          node -e "
            const fs = require('fs');
            const path = require('path');
            
            // Check handlers directory
            const handlersDir = './dist/handlers';
            if (!fs.existsSync(handlersDir)) {
              throw new Error('Handlers directory not found');
            }
            
            const handlers = fs.readdirSync(handlersDir).filter(f => f.endsWith('.js'));
            console.log('Found handlers:', handlers);
            
            if (handlers.length < 7) {
              throw new Error('Expected at least 7 MCP handlers, found: ' + handlers.length);
            }
            
            console.log('✅ MCP structure validation passed');
          "

      - name: Test package installation simulation
        run: |
          echo "Simulating package installation..."
          npm pack
          PACKAGE_FILE=$(ls *.tgz)
          echo "Created package: $PACKAGE_FILE"
          
          # Test in temporary directory
          mkdir -p /tmp/test-install
          cd /tmp/test-install
          npm init -y
          npm install $GITHUB_WORKSPACE/$PACKAGE_FILE
          
          echo "Testing installed package..."
          npx task-list-mcp --version
          
          echo "✅ Package installation simulation passed"

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=moderate
          
      - name: Check for known vulnerabilities
        run: |
          echo "Checking for known vulnerabilities..."
          npx audit-ci --moderate

  performance-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Performance validation
        run: |
          echo "Checking package size..."
          npm pack --dry-run
          
          echo "Checking startup time..."
          time node dist/cli.js --version
          
          echo "Checking memory usage..."
          node -e "
            const startMemory = process.memoryUsage();
            require('./dist/index.js');
            const endMemory = process.memoryUsage();
            console.log('Memory usage:');
            console.log('RSS:', Math.round((endMemory.rss - startMemory.rss) / 1024 / 1024), 'MB');
            console.log('Heap Used:', Math.round((endMemory.heapUsed - startMemory.heapUsed) / 1024 / 1024), 'MB');
          "

  documentation-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation completeness
        run: |
          echo "Checking required documentation files..."
          
          required_files=("README.md" "AGENTS.md" "LICENSE" "package.json")
          for file in "${required_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "❌ Missing required file: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done
          
          echo "Checking README.md content..."
          if ! grep -q "MCP Task Manager" README.md; then
            echo "❌ README.md missing project title"
            exit 1
          fi
          
          if ! grep -q "installation" README.md; then
            echo "❌ README.md missing installation instructions"
            exit 1
          fi
          
          echo "Checking AGENTS.md content..."
          if ! grep -q "MCP Tools" AGENTS.md; then
            echo "❌ AGENTS.md missing MCP tools documentation"
            exit 1
          fi
          
          echo "✅ Documentation validation passed"

  notify-status:
    needs: [build-and-validate, security-audit, performance-check, documentation-check]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: CI Status Summary
        run: |
          echo "## CI Pipeline Results"
          echo "Build & Validate: ${{ needs.build-and-validate.result }}"
          echo "Security Audit: ${{ needs.security-audit.result }}"
          echo "Performance Check: ${{ needs.performance-check.result }}"
          echo "Documentation Check: ${{ needs.documentation-check.result }}"
          
          if [[ "${{ needs.build-and-validate.result }}" == "success" && 
                "${{ needs.security-audit.result }}" == "success" && 
                "${{ needs.performance-check.result }}" == "success" && 
                "${{ needs.documentation-check.result }}" == "success" ]]; then
            echo "🎉 All CI checks passed! Ready for release."
          else
            echo "❌ Some CI checks failed. Please review and fix issues."
            exit 1
          fi